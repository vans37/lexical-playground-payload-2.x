/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    products: Product;
    categories: Category;
    orders: Order;
    pages: Page;
    media: Media;
    users: User;
    'lexical-comments': LexicalComment;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    landing_page: LandingPage;
    navigation: Navigation;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  short_description?: string | null;
  status: 'published' | 'draft';
  images: {
    image?: number | Media | null;
    id?: string | null;
  }[];
  categories: (number | Category)[];
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description_html?: string | null;
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
    robots?: ('index' | 'noindex' | 'follow' | 'nofollow' | 'none') | null;
    keywords?: string | null;
    open_graph?: {
      og_title?: string | null;
      og_image?: number | Media | null;
      og_description?: string | null;
      og_type?: ('article' | 'video.movie' | 'music.song') | null;
      og_site_name?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  uuid?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  image?: number | Media | null;
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
    robots?: ('index' | 'noindex' | 'follow' | 'nofollow' | 'none') | null;
    keywords?: string | null;
    open_graph?: {
      og_title?: string | null;
      og_image?: number | Media | null;
      og_description?: string | null;
      og_type?: ('article' | 'video.movie' | 'music.song') | null;
      og_site_name?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  client_name: string;
  client_phone: string;
  client_message?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  status: 'published' | 'draft';
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
    robots?: ('index' | 'noindex' | 'follow' | 'nofollow' | 'none') | null;
    keywords?: string | null;
    open_graph?: {
      og_title?: string | null;
      og_image?: number | Media | null;
      og_description?: string | null;
      og_type?: ('article' | 'video.movie' | 'music.song') | null;
      og_site_name?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  roles?: ('admin' | 'editor')[] | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lexical-comments".
 */
export interface LexicalComment {
  id: number;
  comments?: string | null;
  hash: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landing_page".
 */
export interface LandingPage {
  id: number;
  hero: {
    title: string;
    subtitle: string;
    images: {
      src?: number | Media | null;
      id?: string | null;
    }[];
  };
  incentives?:
    | {
        title: string;
        description: string;
        svg?: string | null;
        id?: string | null;
      }[]
    | null;
  products: {
    title: string;
    description: string;
    popular_products: {
      relationTo: 'products';
      value: number | Product;
    }[];
  };
  categories: {
    categories: {
      relationTo: 'categories';
      value: number | Category;
    }[];
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
    robots?: ('index' | 'noindex' | 'follow' | 'nofollow' | 'none') | null;
    keywords?: string | null;
    open_graph?: {
      og_title?: string | null;
      og_image?: number | Media | null;
      og_description?: string | null;
      og_type?: ('article' | 'video.movie' | 'music.song') | null;
      og_site_name?: string | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "navigation".
 */
export interface Navigation {
  id: number;
  links?:
    | {
        parent_link: {
          url: string;
          label: string;
        };
        dropdown_links?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'products';
                  value: number | Product;
                } | null;
                url?: string | null;
                label: string;
                description?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  //@ts-ignore
  export interface GeneratedTypes extends Config {}
}